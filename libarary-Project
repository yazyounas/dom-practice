class Media {
  constructor(title) {
    this._title = title ;
    this._isCheckedOut = false;
    this._ratings = [];
  }
  get title() {
    return this._title;
  }
   get isCheckedOut() {
    return this._isCheckedOut;
  }
   get ratings() {
    return this._ratings;
  }
 toggleCheckOutStatus() {
   this._isCheckedOut = !this._isCheckedOut ;
 }

 getAverageRating() {
  return this._ratings.reduce((a, b) => (a + b)) / this._ratings.length;
 }

 addRating(value){
   if(value < 1 || value > 5) {
     throw "rating mus be between 1 and 5"
   } else {
     this._ratings.push(value);
       
   }
   
 }
 
  set isCheckedOut(value) {
     this._isCheckedOut = value;
  }

}
//Sub Class Book
class Book extends Media {
  constructor(author, title, pages) {
    super(title);
    this._author = author;
    this._pages = pages;
  }
  get author() {
    return this._author;
  }
   get pages() {
    return this._pages;
  }
}
const historyOfEverything = new Book('Bill Bryson', 'A Short History of Nearly Everything', 544);
historyOfEverything.toggleCheckOutStatus();
console.log(historyOfEverything.isCheckedOut);
historyOfEverything.addRating(4);
historyOfEverything.addRating(5);
historyOfEverything.addRating(5);
console.log(historyOfEverything.getAverageRating());





class Movie extends Media {
  constructor(director, title, runTime) {
  super(title);
  this._director = director;
  this._runTime = runTime ;
  }

  get director() {
    return this._director;
  }
  get runTime() {
    return this._runTime;
  }
}

const speed = new Movie('Jan de Bont', 'Speed', 116);
speed.toggleCheckOutStatus();
console.log(speed.isCheckedOut);
speed.addRating(1);
speed.addRating(1);
speed.addRating(5);
console.log(speed.getAverageRating());

class CD extends Media {
  constructor(artist, title, songs){
    super(title);
    this._artist = artist ;
    this._songs = songs;
}
get artist() {
  return this._artist;
}
get songs() {
  return this._songs;
}
  shuffle () {
    return this._songs.map(value => ({ value, sort: Math.random() }))
    .sort((a, b) => a.sort - b.sort)
    .map(({ value }) => value)
  }
}
const catalog = new CD('Tony', 'Engenieer', ['1', '2', '3'])
catalog.toggleCheckOutStatus();
console.log(catalog.isCheckedOut);
catalog.addRating(1);
catalog.addRating(1);
catalog.addRating(4);
console.log(catalog.getAverageRating());
console.log(catalog);
console.log(catalog.shuffle());

